{"ast":null,"code":"var _jsxFileName = \"/Users/khursheedalam/Downloads/uber_app_react/src/components/Mobile/OTPVerificationScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Typography, Box, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerificationScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [otp, setOtp] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const verifyOtp = async () => {\n    if (otp.length !== 6) {\n      setError('OTP must be 6 digits');\n      return;\n    }\n    setIsLoading(true);\n    setTimeout(() => {\n      if (otp === '123456') {\n        navigate('/home');\n      } else {\n        setError('Incorrect OTP. Please try again.');\n      }\n      setIsLoading(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Verify Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Enter the 6-digit OTP sent to your phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"OTP\",\n        inputProps: {\n          maxLength: 6\n        },\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: verifyOtp,\n        fullWidth: true,\n        sx: {\n          mt: 2\n        },\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 2,\n          cursor: 'pointer',\n          color: 'blue'\n        },\n        onClick: () => alert('Resend OTP logic'),\n        children: \"Resend OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerificationScreen, \"83Ffku+NX60tKi0VVdAC7naYEkc=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPVerificationScreen;\nexport default OTPVerificationScreen;\nvar _c;\n$RefreshReg$(_c, \"OTPVerificationScreen\");","map":{"version":3,"names":["React","useState","useNavigate","Container","TextField","Button","Typography","Box","CircularProgress","jsxDEV","_jsxDEV","OTPVerificationScreen","_s","navigate","otp","setOtp","error","setError","isLoading","setIsLoading","verifyOtp","length","setTimeout","maxWidth","children","sx","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","label","inputProps","maxLength","onChange","e","target","value","color","onClick","cursor","alert","_c","$RefreshReg$"],"sources":["/Users/khursheedalam/Downloads/uber_app_react/src/components/Mobile/OTPVerificationScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Typography, Box, CircularProgress } from '@mui/material';\n\nconst OTPVerificationScreen = () => {\n  const navigate = useNavigate();\n  const [otp, setOtp] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const verifyOtp = async () => {\n    if (otp.length !== 6) {\n      setError('OTP must be 6 digits');\n      return;\n    }\n    setIsLoading(true);\n    setTimeout(() => {\n      if (otp === '123456') {\n        navigate('/home');\n      } else {\n        setError('Incorrect OTP. Please try again.');\n      }\n      setIsLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8 }}>\n        <Typography variant=\"h4\">Verify Phone</Typography>\n        <Typography>Enter the 6-digit OTP sent to your phone</Typography>\n        <TextField fullWidth margin=\"normal\" label=\"OTP\" inputProps={{ maxLength: 6 }} onChange={e => setOtp(e.target.value)} />\n        {error && <Typography color=\"error\">{error}</Typography>}\n        {isLoading ? <CircularProgress /> : <Button variant=\"contained\" onClick={verifyOtp} fullWidth sx={{ mt: 2 }}>Verify</Button>}\n        <Typography variant=\"body2\" sx={{ mt: 2, cursor: 'pointer', color: 'blue' }} onClick={() => alert('Resend OTP logic')}>\n          Resend OTP\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default OTPVerificationScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}