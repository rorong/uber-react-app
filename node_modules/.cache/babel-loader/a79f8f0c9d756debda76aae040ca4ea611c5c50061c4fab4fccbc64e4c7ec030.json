{"ast":null,"code":"var _jsxFileName = \"/Users/khursheedalam/Downloads/uber_app_react/src/components/Mobile/BlockchainScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlockchainScreen = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactionHash, setTransactionHash] = useState('');\n  const driverId = 'driver_001';\n  const payoutAmount = 50.00;\n  const processPayout = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setTransactionHash('0xabc123');\n      setIsLoading(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Blockchain Payout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Driver ID: \", driverId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Payout Amount: $\", payoutAmount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: processPayout,\n        children: \"Process Payout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 63\n      }, this), transactionHash && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2\n        },\n        children: [\"Transaction Hash: \", transactionHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(BlockchainScreen, \"3WUFeS+2B47EywMXLyDt/w6ODGs=\");\n_c = BlockchainScreen;\nexport default BlockchainScreen;\nvar _c;\n$RefreshReg$(_c, \"BlockchainScreen\");","map":{"version":3,"names":["React","useState","Container","Typography","Button","Box","jsxDEV","_jsxDEV","BlockchainScreen","_s","isLoading","setIsLoading","transactionHash","setTransactionHash","driverId","payoutAmount","processPayout","setTimeout","maxWidth","children","sx","mt","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","_c","$RefreshReg$"],"sources":["/Users/khursheedalam/Downloads/uber_app_react/src/components/Mobile/BlockchainScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Button, Box } from '@mui/material';\n\nconst BlockchainScreen = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactionHash, setTransactionHash] = useState('');\n  const driverId = 'driver_001';\n  const payoutAmount = 50.00;\n\n  const processPayout = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setTransactionHash('0xabc123');\n      setIsLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8, textAlign: 'center' }}>\n        <Typography variant=\"h4\">Blockchain Payout</Typography>\n        <Typography>Driver ID: {driverId}</Typography>\n        <Typography>Payout Amount: ${payoutAmount.toFixed(2)}</Typography>\n        {isLoading ? <Typography>Processing...</Typography> : <Button variant=\"contained\" onClick={processPayout}>Process Payout</Button>}\n        {transactionHash && <Typography sx={{ mt: 2 }}>Transaction Hash: {transactionHash}</Typography>}\n      </Box>\n    </Container>\n  );\n};\n\nexport default BlockchainScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMa,QAAQ,GAAG,YAAY;EAC7B,MAAMC,YAAY,GAAG,KAAK;EAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BL,YAAY,CAAC,IAAI,CAAC;IAClBM,UAAU,CAAC,MAAM;MACfJ,kBAAkB,CAAC,UAAU,CAAC;MAC9BF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEJ,OAAA,CAACL,SAAS;IAACgB,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBZ,OAAA,CAACF,GAAG;MAACe,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACtCZ,OAAA,CAACJ,UAAU;QAACoB,OAAO,EAAC,IAAI;QAAAJ,QAAA,EAAC;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACvDpB,OAAA,CAACJ,UAAU;QAAAgB,QAAA,GAAC,aAAW,EAACL,QAAQ;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC9CpB,OAAA,CAACJ,UAAU;QAAAgB,QAAA,GAAC,kBAAgB,EAACJ,YAAY,CAACa,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,EACjEjB,SAAS,gBAAGH,OAAA,CAACJ,UAAU;QAAAgB,QAAA,EAAC;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,gBAAGpB,OAAA,CAACH,MAAM;QAACmB,OAAO,EAAC,WAAW;QAACM,OAAO,EAAEb,aAAc;QAAAG,QAAA,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChIf,eAAe,iBAAIL,OAAA,CAACJ,UAAU;QAACiB,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAF,QAAA,GAAC,oBAAkB,EAACP,eAAe;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAClB,EAAA,CAzBID,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}